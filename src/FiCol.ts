export class FiCol {
  ofcTxFieldName?: string;
  ofcTxHeader?: string;
  txLabel?: string;
  ofcTxDbFieldName?: string;
  txGuid?: string;

  ofiTxIdType?: string;
  ofcBoUniqGro1?: boolean;
  ofcBoNullable?: boolean;
  ofcBoUnique?: boolean;
  ofcBoUtfSupport?: boolean;
  ofcTxDefValue?: string;
  ofcTxCollation?: string;
  ofcTxTypeName?: string;
  ofcLnLength?: number;
  ofcLnPrecision?: number;
  ofcLnScale?: number;
  ofcBoFilterLike?: boolean;
  ofcTxFieldType?: string;
  ofcTxEntityName?: string;
  oftBoTransient?: boolean;
  ficTxSqlFieldDefinition?: string;

  //prefSize?:ObjectProperty;
  printSize?: number;
  colType?: string;
  //colGenType?:OzColType;
  boEditable?: boolean;
  boHidden?: boolean;
  boOptional?: boolean;
  boExist?: boolean;
  boRequired?: boolean;
  boEnabled?: boolean;
  entity?: object;
  //colFilterNode?:Node;
  //colFilterKeyEvent?:EventHandler;
  //paneHeader?:FxMigPane;
  filterValue?: object;
  boFilterable?: boolean;
  filterNodeClass?: string;
  funcFormatter?: Function;
  //formatter?:Format;
  colEditorClass?: string;
  // colEditorNode?:Node;
  colValue?: object;
  colEditorNodeText?: string;
  // colEditorKeyEvent?:EventHandler;
  // fnEditorSetOnActionWithEntity?:Consumer;
  // fnEditorSetOnAction?:BiConsumer;
  // fnEditorSetOnActionWitCol?:TriConsumer;
  // fnEditorSetOnActionWitValue?:TriConsumer;
  // fnEditorNodeValueFormmatter?:Function;
  // fnEditorNodeRendererBeforeSettingValue?:BiConsumer;
  // fnEditorNodeRendererAfterInitialValue1?:BiConsumer;
  // fnEditorNodeRendererAfterInitialValue2?:BiConsumer;
  // fnEditorNodeRendererAfterFormLoad?:BiConsumer;
  // fnEditorNodeAfterChangeForForm?:BiConsumer;
  // fnEditorNodeRendererWithCol?:TriConsumer;
  // fnEditorNodeRendererWitValue?:TriConsumer;
  // fnEditorNodeLfcAfterAllFormLoad?:Consumer;
  // predEditorDisable?:Predicate;
  // colIndex?:number;
  // listChildCol?:Array<object>;
  // childClazz?:Class;
  // entClass?:Class;
  // colComment?:string;
  // mapStyle?:Map;
  // fnColButton?:BiConsumer;
  boNullable?: boolean;
  boNonUpdatable?: boolean;
  boNonEditableForForm?: boolean;
  txParamName?: string;
  boKeyIdField?: boolean;
  boKeyIdentityField?: boolean;
  boUpdateFieldForQuery?: boolean;
  boInsertFieldForQuery?: boolean;
  boParamStatus?: boolean;
  // tableColumnFx?:ObjectProperty;
  // fxTreeTableCol?:ObjectProperty;
  // fxTableCol2?:FxTableCol2;
  // fnColCellManualChanged?:Consumer;
  // summaryLabelNode?:FxLabel;
  // summaryCheckBox?:FxCheckBox;
  // summaryNode?:Node;
  // summaryType?:OzColSummaryType;
  // summaryCalculateFn?:Function;
  // boDontExportExcel?:boolean;
  // boDontExportExcelTemplate?:boolean;
  // ifxNodeEditor?:IfxNode;
  boFilterLike?: boolean;
  // fnEditorNodeRendererAfterFormLoad2?:TriConsumer;
  // fnNodeFocusTrigger?:Consumer;
  lnCode?: number;
  // fnValidate?:Function;
  boEditorOnlyNumber?: boolean;
  boWhereField?: boolean;

  public static bui(txFieldName:string,txHeader:string):FiCol {
    let fiCol = new FiCol();
    fiCol.ofcTxFieldName = txFieldName;
    fiCol.ofcTxHeader = txHeader;
    return fiCol;
  }
}
